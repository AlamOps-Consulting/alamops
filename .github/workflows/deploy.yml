on:
  push:
    branches: [master]

name: Deploy `alamops-web` CI/CD
env:
  PROJECT_KEY: alamops-web
  IMAGE_NAME: fjvigil/alamops-web
  DOCKERFILE_PATH: ./Dockerfile
  BUILD_CONTEXT: .
  EXTERNAL_REPO: AlamOps-Consulting/alamops_kube_prod.git
  EXTERNAL_REPO_BRANCH: master
  MANIFEST_PATH: 07-applications/alamops-web/deployment.yml

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set short GIT_COMMIT
        run: echo "GIT_COMMIT=${GITHUB_SHA::7}" >> $GITHUB_ENV

      # QEMU solo si vas a compilar multi-arch (arm64). Puedes comentarlo mientras estabilizas amd64.
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Step para Node + cache SÓLO si hay lockfile
      - name: Use Node.js (with cache if lockfile exists)
        if: ${{ hashFiles('package-lock.json', 'npm-shrinkwrap.json', 'yarn.lock') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: npm
          # Si usas yarn o pnpm, cambia 'cache' y añade el lockfile correspondiente
          cache-dependency-path: |
            package-lock.json
            npm-shrinkwrap.json
            yarn.lock

      - name: Use Node.js (no cache)
        if: ${{ hashFiles('package-lock.json', 'npm-shrinkwrap.json', 'yarn.lock') == '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Instalación adaptativa: npm ci si hay lockfile; si no, npm install
      - name: Install deps
        run: |
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then
            npm ci
          elif [ -f yarn.lock ]; then
            corepack enable && corepack prepare yarn@stable --activate
            yarn install --frozen-lockfile
          else
            echo "No lockfile found. Using npm install (not ideal for CI)."
            npm install
          fi

      - name: Lint & Pre-build Next.js
        env:
          NEXT_TELEMETRY_DISABLED: "1"
          NODE_OPTIONS: "--max_old_space_size=4096"
        run: |
          npm run lint --if-present
          npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push image to Docker Hub
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.BUILD_CONTEXT }}
          file: ${{ env.DOCKERFILE_PATH }}
          push: true
          # Fija amd64 para evitar problemas de SWC/compilación en arm64 al principio
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_OPTIONS=--max_old_space_size=4096
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ env.GIT_COMMIT }}

      # --- BUMP EN REPO EXTERNO ---
      - name: Clone external repo (to bump manifest)
        run: |
          git clone --depth 1 --branch "${EXTERNAL_REPO_BRANCH}" \
            "https://${{ secrets.EXTERNAL_REPO_AUTH }}@github.com/${EXTERNAL_REPO}" external-repo

      - name: Update manifest with new image tag
        working-directory: external-repo
        env:
          GIT_COMMIT: ${{ env.GIT_COMMIT }}
          MANIFEST_PATH: ${{ env.MANIFEST_PATH }}
        run: |
          test -f "${MANIFEST_PATH}" || { echo "ERROR: No existe ${MANIFEST_PATH}"; exit 1; }
          /usr/bin/sed -i "s|image: ${IMAGE_NAME}:.*|image: ${IMAGE_NAME}:${GIT_COMMIT}|" "${MANIFEST_PATH}"
          echo "Diff:"
          git --no-pager diff -- "${MANIFEST_PATH}" || true

      - name: Commit & Push (only if there are changes)
        working-directory: external-repo
        env:
          EXTERNAL_REPO: ${{ env.EXTERNAL_REPO }}
          EXTERNAL_REPO_BRANCH: ${{ env.EXTERNAL_REPO_BRANCH }}
        run: |
          if git status --porcelain | grep -q .; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add "${MANIFEST_PATH}"
            git commit -m "chore: bump image tag to ${GITHUB_SHA::7}"
            git remote set-url origin "https://${{ secrets.EXTERNAL_REPO_AUTH }}@github.com/${EXTERNAL_REPO}"
            git push origin "${EXTERNAL_REPO_BRANCH}"
          else
            echo "No hay cambios que commitear."
          fi
